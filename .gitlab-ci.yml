# Help: https://docs.gitlab.com/ee/ci/yaml/
# Validation: https://gitlab.com/roleone/webapp/-/ci/lint

# The goal is to run the tests in a docker container. Because if you try running
# in just a node:latest container, it won’t work since Karma is looking for Chrome.
# Luckily someone has already done the hard work in solving that problem.
# A huge shout out to this docker container and it’s maintainer.
image: trion/ng-cli-karma

cache:
  paths:
    - node_modules/

before_script:
    - npm i -g @angular/cli
    - echo 'node -v'
    - npm install

stages:
  - build
  - test
  - deploy

#build_dev:
#  stage: build
#  environment:
#    name: dev
#  <<: *node
#  script:
#    - npm install
#    - npm run builddev

build_master:
  stage: build
  environment:
    name: production
  <<: *node
  script:
    - npm run buildprod
  only:
    - master

karma_test:
  image: trion/ng-cli-karma
  stage: test
  script:
    - rm ./package-lock.json
    - echo 'running tests with code coverage'
    - ./node_modules/@angular/cli/bin/ng test --watch=false --code-coverage
  artifacts:
    paths:
      - coverage/

coverage:
  image: alpine
  stage: deploy
  dependencies:
    - karma_test
  before_script:
    - echo 'deploying code coverage stats'
  script:
    - mv coverage/ public/
  artifacts:
    paths:
      - public
    expire_in: 30 days

#protactor_test:
#  stage: test
#  script:
#    - rm ./package-lock.json
#    - ./node_modules/@angular/cli/bin/ng e2e --progress false --watch=false

deploy_firebase:
  stage: deploy
  environment:
    name: production
  <<: *node
  script:
    - npm run deploy
  only:
    - master
